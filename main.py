from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from Base import Group, Base, Station, User, Settings
import telebot
import json
import time
import datetime

MAX_GROUP_STUDENTS = 2
# –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Ö–æ–¥—É
# db = MongoClient()['am-cp']

engine = create_engine('sqlite:///kvestinfa.db')
Base.metadata.bind = engine
DBSession = sessionmaker(bind=engine)
session = DBSession()


with open('keys.json', 'r') as file:
    token = json.loads(file.read())['bot_token']

bot = telebot.TeleBot(token)


def keyboard(key):
    x = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    for j in key:
        x.add(*[telebot.types.KeyboardButton(i) for i in j])
    return x


def log_message(message):
    with open('logs.txt', 'a') as logs:
        line = '[' + str(datetime.datetime.now().time()) + ']' + ' ' + \
              str(message.from_user.first_name) + ' ' + \
              str(message.from_user.last_name) + ' ' + \
              '(' + str(message.from_user.username) + '):' + ' ' + \
              message.text + '  ' + str(message.chat.id)
        logs.write(line+'\n')
        print(line)


def check_user_in_bd(message):
    id_u = message.chat.id
    users = session.query(User).all()
    in_bd = False
    for i in users:
        if i.id == id_u:
            in_bd = True
            break
    session.close()
    return in_bd


def check_station_in_bd(number):
    in_bd = False
    stations = session.query(Station).all()
    for i in stations:
        if i.id == number:
            in_bd = True
            break
    session.close()
    return in_bd


def check_group_in_bd(number):
    in_bd = False
    stations = session.query(Group).all()
    for i in stations:
        if i.id == number:
            in_bd = True
            break
    session.close()
    return in_bd

def check_group_on_st(station):
    in_bd = False
    stations = session.query(Group).all()
    for i in stations:
        if i.current_station == station:
            in_bd = True
            break
    session.close()
    return in_bd


def send_message_group(group_number, text):
    group = session.query(Group).filter_by(id=group_number).one()
    users = session.query(User).filter_by(group=group.id).all()
    for u in users:
        bot.send_message(u.id, text)
    session.close()



# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(commands=['start'])
def handle_start(message):
    log_message(message)
    is_open = session.query(Settings).filter_by(name='registration').one().status
    if is_open:
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä üëãüèª\n–î–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è. –ü–∏—à–∏ /reg_org N, –≥–¥–µ –≤–º–µ—Å—Ç–æ N –Ω–æ–º–µ—Ä —Ç–≤–æ–µ–π —Å—Ç–∞–Ω—Ü–∏–∏. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—ë —Å—Ç–∞–Ω—Ü–∏–∏, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä, —Ç—ã –º–æ–∂–µ—à—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /free')
    else:
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –ø–µ—Ä–≤–æ–∫—É—Ä—Å–Ω–∏–∫ üëãüèª\n–£–∂–µ —Å–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ —Ç–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–º –∫–≤–µ—Å—Ç–µ –¥–ª—è –ø–µ—Ä–≤–æ–∫—É—Ä—Å–Ω–∏–∫–æ–≤, –∏ —è —Ç–µ–±–µ –≤ —ç—Ç–æ–º –ø–æ–º–æ–≥—É. –ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è. –ü–∏—à–∏ /reg_user 1**, –≥–¥–µ –≤–º–µ—Å—Ç–æ 1** —Ç–≤–æ–π –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã')
    session.close()

# –ü–æ–º–æ—â—å
@bot.message_handler(commands=['help'])
def handle_help(message):
    user_in = check_user_in_bd(message)
    log_message(message)
    if not user_in:
        bot.send_message(message.chat.id, '–°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!')
    else:
        user = session.query(User).filter_by(id=message.chat.id).one()
        if not user.type:
            bot.send_message(message.chat.id, '–¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –∫–∞–∫ —É—á–∞—Å—Ç–Ω–∏–∫!\n'
                                              '–ó–∞–¥–∞—á–∞ —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã –ø—Ä–æ–π—Ç–∏ –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ —Å—Ç–∞–Ω—Ü–∏–π –∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –æ–ø—ã—Ç–∞. '
                                              '–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–æ–ª—å—à–µ –æ–ø—ã—Ç–∞ —Ç–µ–±–µ –ø–æ–º–æ–≥—É—Ç –¥–µ–Ω—å–≥–∏, —á–µ–º –±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥, —Ç–µ–º –±—ã—Å—Ç—Ä–µ–µ —Ä–∞—Å—Ç—ë—Ç —Ç–≤–æ–π –æ–ø—ã—Ç. '
                                              '–î–µ–Ω—å–≥–∏ –º–æ–∂–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å —Å –ø–æ–º–æ—â—å—é —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π –¥–æ –Ω–∞—á–∞–ª–∞ –∫–≤–µ—Å—Ç–∞. –ù–µ –Ω–∞–¥–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –º–Ω–µ –≤–∏–¥–µ–æ –∏ —Ñ–æ—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π! '
                                              '–ü—Ä–æ–≤–µ—Ä—è—Ç—å –∏—Ö –±—É–¥–µ—Ç @xxxxx, –µ–º—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ —Ç–æ–ª—å–∫–æ —É–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã –∏ –Ω–æ–º–µ—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è.\n'
                                              '–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–±–µ –∫–æ–º–∞–Ω–¥—ã:\n'
                                              '/info - —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã\n'
                                              '/free - —Å–ø–∏—Å–æ–∫ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å—Ç–∞–Ω—Ü–∏–π\n'
                                              '/take N - –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞–Ω—Ü–∏—é –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è (N - –Ω–æ–º–µ—Ä —Å—Ç–∞–Ω—Ü–∏–∏)\n\n'
                                              '–ü–æ—Ä—è–¥–æ–∫ —Ç–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π: –≤—ã–±–∏—Ä–∞–µ—à—å —Å—Ç–∞–Ω—Ü–∏—é –∏–∑ —Å–≤–æ–±–æ–¥–Ω—ã—Ö, –±—Ä–æ–Ω–∏—Ä—É–µ—à—å —ç—Ç—É —Å—Ç–∞–Ω—Ü–∏—é, –±–µ–∂–∏—à—å –∫ –Ω—É–∂–Ω–æ–º—É –º–µ—Å—Ç—É, –≤—ã–ø–æ–ª–Ω—è–µ—à—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–¥–∞–Ω–∏—è –∏ –ø–æ–ª—É—á–∞–µ—à—å –Ω–∞–≥—Ä–∞–¥—É. '
                                              '–ü–æ—Å–ª–µ 17:00 –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–Ω—Ü–∏–∏ —Å—Ç–∞–Ω–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º, –ø–æ—Ç–æ—Ä–æ–ø–∏—Å—å!\n\n'
                                              '–ü–æ –≤—Å–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ @menacing_dwarf')
        else:
            bot.send_message(message.chat.id, '–¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –∫–∞–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä! –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–±–µ –∫–æ–º–∞–Ω–¥—ã:\n'
                                              '/station - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–≤–æ–µ–π —Å—Ç–∞–Ω—Ü–∏–∏\n'
                                              '/free - —Å–ø–∏—Å–æ–∫ —Å—Ç–∞–Ω—Ü–∏–π\n'
                                              '/reward N - –≤—ã—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∫–æ–º–∞–Ω–¥–µ (–æ—Ç 1 –¥–æ 10)\n\n'
                                              )
    session.close()

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞
@bot.message_handler(commands=['reg_user'])
def handler_user(message):
    log_message(message)
    try:
        group = int(message.text.split()[1])
    except:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!')
    else:
        x_in = check_group_in_bd(group)
        if not x_in:
            bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã!')
        else:
            if len(list(session.query(User).filter_by(group=group).all())) >= MAX_GROUP_STUDENTS:
                bot.send_message(message.chat.id, '–í –≤—ã–±—Ä–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É —É–∂–µ –Ω–µ–ª—å–∑—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!')
            else:
                user = check_user_in_bd(message)
                if not user:

                    user_reg = User(id=message.chat.id, username=message.from_user.username, full_name=message.from_user.first_name + ' ' + 'message.from_user.last_name', type=0, group=group)
                    session.add(user_reg)
                    session.commit()
                    keyboards = keyboard([['/info'], ['/free'], ['/help']])
                    bot.send_message(message.chat.id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! üéâ\n'
                                                      '–¢–µ–ø–µ—Ä—å —Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ —É—á–∞—Å—Ç–Ω–∏–∫ –≥—Ä—É–ø–ø—ã ' + str(group) + '!\n'
                                                      '–ü–∏—à–∏ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.',
                                     reply_markup=keyboards)
                else:
                    bot.send_message(message.chat.id, '–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ —ç—Ç–æ –¥–µ–ª–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ üòâ')
    session.close()

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –≥—Ä—É–ø–ø—ã
@bot.message_handler(commands=['info'])
def handler_info(message):
    log_message(message)
    user_in = check_user_in_bd(message)
    if not user_in:
        bot.send_message(message.chat.id, '–°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!')
    else:
        user = session.query(User).filter_by(id=message.chat.id).one()
        group_number = user.group
        if check_group_in_bd(group_number):
            group = session.query(Group).filter_by(id=group_number).one()
            if group.current_station != 0:
                current_station = session.query(Station).filter_by(id=group.current_station).one().name
            else:
                current_station = '–Ω–µ—Ç —Ç–µ–∫—É—â–µ–π —Å—Ç–∞–Ω—Ü–∏–∏'
            bot.send_message(message.chat.id, '–ì—Ä—É–ø–ø–∞ –Ω–æ–º–µ—Ä ' + str(group_number) +
                             '\nüö©–¢–µ–∫—É—â–∞—è —Å—Ç–∞–Ω—Ü–∏—è: ' + current_station +
                             '\nüí∞–î–µ–Ω—å–≥–∏: ' + str(group.money) +
                             '\n‚ú®–û–ø—ã—Ç: ' + str(group.experience) +
                             '\n‚è´–ú—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ç–æ—Ä –æ–ø—ã—Ç–∞: ' + str(1 + group.money / 100))
        else:
            bot.send_message(message.chat.id, '–£ —Ç–µ–±—è –Ω–µ—Ç –≥—Ä—É–ø–ø—ã(')
    session.close()


# –°–≤–æ–±–æ–¥–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏
@bot.message_handler(commands=['free'])
def handler_free(message):
    log_message(message)
    is_started = session.query(Settings).filter_by(name='quest').one().is_started
    is_ended = session.query(Settings).filter_by(name='quest').one().is_ended
    is_open = session.query(Settings).filter_by(name='registration').one().status
    if not is_started and not is_open:
        text = '–ö–≤–µ—Å—Ç –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª—Å—è, –ø–æ—Ç–µ—Ä–ø–∏ –µ—â—ë –Ω–µ–º–Ω–æ–∂–∫–æ üòâ' if not is_ended else '–ö–≤–µ—Å—Ç —É–∂–µ –∑–∞–∫–æ–Ω—á–µ–Ω, –º–æ–∂–µ—à—å –æ—Ç–¥–æ—Ö–Ω—É—Ç—å üòâ'
        bot.send_message(message.chat.id, text)
    else:
        stations = list(session.query(Station).filter_by(group=0).all())
        user_in = check_user_in_bd(message)
        if user_in:
            user = session.query(User).filter_by(id=message.chat.id).one()
            if not user.type:
                group = session.query(Group).filter_by(id=user.group).one()
                stations = list(filter(lambda station: station.name not in group.stations, stations))
        answer = "\n\n".join([str(station.id) + '. ' + station.name +
                              '\nüìç–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: ' + station.geo +
                              '\nüéÅ–ù–∞–≥—Ä–∞–¥–∞: ' + str(station.reward) for station in stations]) if len(stations) > 0 \
            else "–ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å—Ç–∞–Ω—Ü–∏–π"
        bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å—Ç–∞–Ω—Ü–∏–π:\n\n' + answer)
    session.close()


# –í–∑—è—Ç—å —Å—Ç–∞–Ω—Ü–∏—é
@bot.message_handler(commands=['take'])
def handler_take(message):
    log_message(message)
    user_in = check_user_in_bd(message)
    if not user_in:
        bot.send_message(message.chat.id, '–°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!')
    else:
        user = session.query(User).filter_by(id=message.chat.id).one()
        is_started = session.query(Settings).filter_by(name='quest').one().is_started
        is_ended = session.query(Settings).filter_by(name='quest').one().is_ended
        if not is_started:
            text = '–ö–≤–µ—Å—Ç –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª—Å—è, –ø–æ—Ç–µ—Ä–ø–∏ –µ—â—ë –Ω–µ–º–Ω–æ–∂–∫–æ üòâ' if not is_ended else '–ö–≤–µ—Å—Ç —É–∂–µ –∑–∞–∫–æ–Ω—á–µ–Ω, –º–æ–∂–µ—à—å –æ—Ç–¥–æ—Ö–Ω—É—Ç—å üòâ'
            bot.send_message(message.chat.id, text)
        else:
            group = session.query(Group).filter_by(id=user.group).one()
            if group.current_station != 0:
                bot.send_message(message.chat.id, '–í—ã –µ—â—ë –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç–∞–Ω—Ü–∏–∏!')
                session.close()
            else:
                try:
                    station_number = int(message.text.split()[1])
                except:
                    bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!')
                else:
                    station_in = check_station_in_bd(station_number)
                    if not station_in:
                        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç–∞–Ω—Ü–∏–∏!')
                    else:
                        station = session.query(Station).filter_by(id=station_number).one()
                        if station.name in group.stations:
                            bot.send_message(message.chat.id, '–í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ —ç—Ç—É —Å—Ç–∞–Ω—Ü–∏—é!')
                            session.close()
                            return
                        session.close()
                        group = session.query(Group).filter_by(id=user.group).one()
                        group.current_station = station_number
                        station.group = group.id
                        session.commit()
                        session.close()
                        bot.send_message(message.chat.id, '–í–∞—à–∞ –≥—Ä—É–ø–ø–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ —Å—Ç–∞–Ω—Ü–∏—é \"' +
                                                          station.name +
                                                          '\"! –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –∂–¥—ë—Ç –≤–∞—Å –≤ —Å–ª–µ–¥—É—é—â–µ–º –º–µ—Å—Ç–µ:\nüìç' +
                                                          station.geo)
                        org = session.query(User).filter_by(station=station.id).one().id
                        bot.send_message(org, '–ì—Ä—É–ø–ø–∞ ' + str(group.id) + ' –±—ã–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ –≤–∞—à—É —Å—Ç–∞–Ω—Ü–∏—é!')
    session.close()


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞
@bot.message_handler(commands=['reg_org'])
def handler_reg_org(message):
    log_message(message)
    is_open = session.query(Settings).filter_by(name='registration').one().status
    if not is_open:
        bot.send_message(message.chat.id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤ –∑–∞–∫—Ä—ã—Ç–∞!')
    else:
        try:
            station = int(message.text.split()[1])
        except:
            bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!')
        else:
            x_in = check_station_in_bd(station)
            if not x_in:
                bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç–∞–Ω—Ü–∏–∏!')
            else:
                x = session.query(Station).filter_by(id=station).one()
                user_in = check_user_in_bd(message)
                if not user_in:
                    addorg = User(id=message.chat.id, username=str(message.from_user.username), full_name=str(message.from_user.first_name) + ' ' + str(message.from_user.last_name), type=1, station=station)
                    session.add(addorg)
                    session.commit()
                    keyboards = keyboard([['/station'], ['/help']])
                    bot.send_message(message.chat.id, '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä —Å—Ç–∞–Ω—Ü–∏–∏ \"' + x.name + '\" –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.',
                                     reply_markup=keyboards)
                else:
                    bot.send_message(message.chat.id, '–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ —ç—Ç–æ –¥–µ–ª–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ üòâ')
    session.close()


# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∞–Ω—Ü–∏–∏
@bot.message_handler(commands=['station'])
def handler_station(message):
    log_message(message)
    user_in = check_user_in_bd(message)
    if not user_in:
        bot.send_message(message.chat.id, '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!')
    else:
        user = session.query(User).filter_by(id=message.chat.id).one()
        if user.type != 1:
            bot.send_message(message.chat.id, '–í—ã –Ω–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä!')
        else:
            station = session.query(Station).filter_by(id=user.station).one()
            group = session.query(Group).filter_by(current_station=user.station).one()
            current_group = str(group.id) if group else '–ø—É—Å—Ç–æ'


            bot.send_message(message.chat.id, str(station.id) + '. ' + station.name +
                                              '\n–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: ' + station.geo +
                                              '\n–¢–µ–∫—É—â–∞—è –≥—Ä—É–ø–ø–∞: ' + current_group)
    session.close()


# –ù–∞—á–∏—Å–ª–∏—Ç—å –±–∞–ª–ª—ã
@bot.message_handler(commands=['reward'])
def handler_reward(message):
    log_message(message)
    user_in = check_user_in_bd(message)
    if not user_in:
        bot.send_message(message.chat.id, '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!')
    else:
        user = session.query(User).filter_by(id=message.chat.id).one()
        if user.type != 1:
            bot.send_message(message.chat.id, '–í—ã –Ω–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä!')
        else:
            station = session.query(Station).filter_by(id=user.station).one()
            in_bd = check_group_on_st(user.station)
            if not in_bd:
                bot.send_message(message.chat.id, '–ù–∞ –≤–∞—à–µ–π —Å—Ç–∞–Ω—Ü–∏–∏ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç!')
            else:
                group = session.query(Group).filter_by(current_station=user.station).one()
                try:
                    points = int(message.text.split()[1])
                    if points < 1 or points > 10:
                        raise Exception
                except:
                    bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!')
                else:
                    reward = station.reward * points / 10 * (1 + group.money / 100)
                    group.experience += reward
                    group.current_station = 0
                    group.stations += ' ' + station.name
                    session.commit()
                    station.group = 0
                    session.commit()
                    bot.send_message(message.chat.id, '–ì—Ä—É–ø–ø–µ ' + str(group.id) + ' —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∏—Å–ª–µ–Ω–Ω—ã –±–∞–ª–ª—ã!')

                    send_message_group(group.id, '–°—Ç–∞–Ω—Ü–∏—è \"' + station.name + '\" —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–∞! üéâ'
                                                    '\n–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –ø–æ—Å—Ç–∞–≤–∏–ª –≤–∞–º ' + str(points) + ' –±–∞–ª–ª–æ–≤.'
                                                    '\n–í–∞–º –±—ã–ª–æ –Ω–∞—á–∏—Å–ª–µ–Ω–Ω–æ ' + str(reward) + ' –æ–ø—ã—Ç–∞.'
                                                    '\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç–∞–Ω—Ü–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–≤–æ–±–æ–¥–Ω—ã—Ö.')
    session.close()



# –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –¥–µ–Ω–µ–≥
@bot.message_handler(commands=['pay'])
def handler_pay(message):
    user_in = check_user_in_bd(message)
    if user_in:
        user = session.query(User).filter_by(id=message.chat.id).one()
        log_message(message)
        if user.type == 2 or user.type == 1:
            try:
                group_number = int(message.text.split()[1])
                amount = int(message.text.split()[2])
            except:
                bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!')
            else:
                group = session.query(Group).filter_by(id=group_number).one()
                group.money += amount
                session.commit()

                bot.send_message(message.chat.id, '–î–µ–Ω—å–≥–∏ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∏–ª–µ–Ω—ã.')
                send_message_group(group_number, '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–≤–æ–µ–π –≥—Ä—É–ø–ø–µ –±—ã–ª–æ –Ω–∞—á–∏—Å–ª–µ–Ω–æ ' + str(amount) + ' –º–æ–Ω–µ—Ç! –î–∞ –≤—ã –±–æ–≥–∞—Ç—ã üí∞üí∞üí∞')
    session.close()


# –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(commands=['mailing'])
def handler_mailing(message):
    user_in = check_user_in_bd(message)
    if user_in:
        user = session.query(User).filter_by(id=message.chat.id).one()
        log_message(message)
        if user.type == 2 or user.type == 1:
            try:
                text = ' '.join(message.text.split()[1:])
            except:
                bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!')
            else:
                users = session.query(User).all()
                for u in users:
                    bot.send_message(u.id, text)
    session.close()


# –û—Ç–∫—Ä—ã—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤
@bot.message_handler(commands=['open'])
def handler_open(message):
    log_message(message)
    user = session.query(User).filter_by(id=message.chat.id).one()
    if user.type == 2 or user.type == 1:
        open_settings = session.query(Settings).filter_by(name='registration').one()
        open_settings.status = True
        session.commit()
        bot.send_message(message.chat.id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∞!')
    session.close()


# –ó–∞–∫—Ä—ã—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤
@bot.message_handler(commands=['close'])
def handler_close(message):
    log_message(message)
    user = session.query(User).filter_by(id=message.chat.id).one()
    if user.type == 2 or user.type == 1:
        open_settings = session.query(Settings).filter_by(name='registration').one()
        open_settings.status = False
        session.commit()
        bot.send_message(message.chat.id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–∞!!')
    session.close()


# –ù–∞—á–∞—Ç—å –∫–≤–µ—Å—Ç
@bot.message_handler(commands=['begin'])
def handler_begin(message):
    log_message(message)
    user = session.query(User).filter_by(id=message.chat.id).one()
    if user.type == 2 or user.type == 1:
        quest_settings = session.query(Settings).filter_by(name='quest').one()
        quest_settings.is_started = True
        quest_settings.is_ended = False
        session.commit()
        bot.send_message(message.chat.id, '–ö–≤–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')
        users = session.query(User).all()
        text = '–ö–≤–µ—Å—Ç —Ç–æ–ª—å–∫–æ —á—Ç–æ –Ω–∞—á–∞–ª—Å—è, –∞ –∑–Ω–∞—á–∏—Ç –≤—ã —É–∂–µ –º–æ–∂–µ—Ç–µ –≤—ã–±–∏—Ä–∞—Ç—å —Å—Ç–∞–Ω—Ü–∏–∏, –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞–Ω–∏—è –∏ ' \
               '–∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ–ø—ã—Ç, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –¥–ª—è –ø–æ–±–µ–¥—ã!\n' \
               '–ü–æ—Å–ø–µ—à–∏—Ç–µ, –∞ —Ç–æ –¥—Ä—É–≥–∏–µ –≥—Ä—É–ø–ø—ã –≤–∞—Å –æ–±–æ–π–¥—É—Ç! üòè'
        for u in users:
            bot.send_message(u.id, text)
    session.close()


# –ó–∞–∫–æ–Ω—á–∏—Ç—å –∫–≤–µ—Å—Ç
@bot.message_handler(commands=['end'])
def handler_end(message):
    user = session.query(User).filter_by(id=message.chat.id).one()
    if user.type == 2 or user.type == 1:
        quest_settings = session.query(Settings).filter_by(name='quest').one()
        quest_settings.is_started = False
        quest_settings.is_ended = True
        session.commit()
        bot.send_message(message.chat.id, '–ö–≤–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–æ–Ω—á–µ–Ω!')
        users = session.query(User).filter_by(type=0).all()
        text = '–ù–∞—à –∫–≤–µ—Å—Ç –ø–æ–¥–æ—â—ë–ª –∫ –∫–æ–Ω—Ü—É, –∑–∞–∫–∞–Ω—á–∏–≤–∞–π—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å—Ç–∞–Ω—Ü–∏–∏ –∏ –∂–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, ' \
               '–∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ–±—ä—è–≤–ª–µ–Ω—ã –≤ –∫–ª—É–±–µ! –ö—Å—Ç–∞—Ç–∏, –≤—ã –¥–æ —Å–∏—Ö –ø–æ—Ä –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –±–∏–ª–µ—Ç–∏–∫–∏ –Ω–∞ —Å–∞–º—É—é –æ—Ç–≤—è–∑–Ω—É—é –≤–µ—á–µ—Ä–∏–Ω–∫—É –Ω–∞—à–µ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞, –ø–æ—Å–ø–µ—à–∏—Ç–µ üòâ, –∞ –º–æ–∂–µ—Ç —É–∂–µ –Ω–µ –º–æ–∂–µ—Ç–µ\n' \
               '–ê –º–Ω–µ –ø–æ—Ä–∞ —Å –≤–∞–º–∏ –ø—Ä–æ—â–∞—Ç—å—Å—è –∏ —É—Ö–æ–¥–∏—Ç—å –Ω–∞ –∑–∞—Å–ª—É–∂–µ–Ω–Ω—ã–π –æ—Ç–¥—ã—Ö. –ë—ã–ª–æ –∫—Ä—É—Ç–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Å –≤–∞–º–∏ –≤—Ä–µ–º—è, –¥–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á!!!'
        for u in users:
            bot.send_message(u['id'], text)
    session.close()


# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º –≥—Ä—É–ø–ø–∞–º
@bot.message_handler(commands=['stats'])
def handler_stats(message):
    log_message(message)
    user = session.query(User).filter_by(id=message.chat.id).one()
    if user.type == 2 or user.type == 1:
        groups = session.query(Group).all()
        text = '–†–µ–π—Ç–∏–Ω–≥ –≥—Ä—É–ø–ø:'
        place = 1
        for group in sorted(groups, key=lambda g: g['experience'], reverse=True):
            text += '\n\n' + str(place) + '. –ì—Ä—É–ø–ø–∞ ' + str(group['id']) + \
                    '\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—ã—Ç–∞: ' + str(group['experience']) + \
                    '\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–Ω–µ–≥: ' + str(group['money'])
            place += 1

        bot.send_message(message.chat.id, text)
    print('User \"' + message.from_user.username + '\" send message ' + message.text)
    session.close()


# –õ–µ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(content_types=['text'])
def handle_message(message):
    log_message(message)
    bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è —Å–ª–∏—à–∫–æ–º –≥–ª—É–ø—ã–π, —á—Ç–æ–±—ã –ø–æ–±–æ–ª—Ç–∞—Ç—å —Å —Ç–æ–±–æ–π üòü')


if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop=True)
        except Exception as e:
            print(e)
            time.sleep(5)
